{"version":3,"sources":["Components/Zooga/Thumb.js","Components/Zooga/Thumbs.js","Components/Zoo/Zoo.js","Components/Zooga/Zooga.js","App.js","serviceWorker.js","index.js"],"names":["Thumb","_this$props","this","props","id","active","clickThumb","image","name","react_default","a","createElement","className","onClick","src","thumb","alt","width","height","Component","Thumbs","images","index","map","j","Zooga_Thumb","key","Zoo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidUpdate","prevProps","setState","onMouseMove","e","preventDefault","position","getCursorPosition","posx","x","posy","y","_this$state","state","imageWidth","imageHeight","lensWidth","lensHeight","cx","cy","lensLeft","lensTop","resultX","resultY","_e$target$getBounding","target","getBoundingClientRect","left","top","pageX","pageY","window","pageXOffset","pageYOffset","hoverOn","hoverVisor","hoverOff","Number","_this$state2","hover","styleLens","concat","display","styleResult","backgroundImage","backgroundSize","backgroundPosition","onMouseEnter","onMouseLeave","style","Zooga","imageZoom","Components_Zoo_Zoo","Zooga_Thumbs","App","Components_Zooga_Zooga","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kSAwBeA,0LApBF,IAAAC,EAODC,KAAKC,MAJLC,EAHCH,EAGDG,GACAC,EAJCJ,EAIDI,OACAC,EALCL,EAKDK,WACAC,EANCN,EAMDM,MAGEC,EAAOH,EAAS,qBAAsB,cAC5C,OACGI,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EACXK,QAAS,kBAAMP,EAAWF,KAE1BK,EAAAC,EAAAC,cAAA,OAAKG,IAAKP,EAAMQ,MAAOC,IAAI,GAAGC,MAAM,KAAKC,OAAO,eAhB5CC,cCgCLC,mLA7BF,IAAAnB,EAMDC,KAAKC,MAHLkB,EAHCpB,EAGDoB,OACAC,EAJCrB,EAIDqB,MACAhB,EALCL,EAKDK,WAGJ,OACGG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEVS,EAAOE,IAAI,SAAChB,EAAOiB,GACf,IAAInB,EAAUmB,IAAMF,EACpB,OACGb,EAAAC,EAAAC,cAACc,EAAD,CACKC,IAAKF,EACLpB,GAAIoB,EACJnB,OAAQA,EACRC,WAAYA,EACZC,MAAOA,cArBdY,aC+INQ,qBA7IX,SAAAA,EAAYxB,GAAM,IAAAyB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA3B,KAAAyB,IACdC,EAAAC,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAA/B,KAAMC,KAkBV+B,mBAAqB,SAACC,GACdA,EAAU5B,QAAUqB,EAAKzB,MAAMI,OAC/BqB,EAAKQ,SAAS,CACV7B,MAAOqB,EAAKzB,MAAMI,SAtBZqB,EA2BlBS,YAAc,SAACC,GACXA,EAAEC,iBAEF,IAAIC,EAAWZ,EAAKa,kBAAkBH,GAEtCV,EAAKQ,SAAS,CACVM,KAAMF,EAASG,EACfC,KAAMJ,EAASK,IAPF,IAAAC,EAgBblB,EAAKmB,MANLC,EAVaF,EAUbE,WACAC,EAXaH,EAWbG,YACAC,EAZaJ,EAYbI,UACAC,EAbaL,EAabK,WACAC,EAdaN,EAcbM,GACAC,EAfaP,EAebO,GAGAV,EAAIH,EAASG,EAAKO,EAAY,EAC9BL,EAAIL,EAASK,EAAKM,EAAa,EAE/BR,EAAIK,EAAaE,IACjBP,EAAIK,EAAaE,GAEjBP,EAAI,IACJA,EAAI,GAEJE,EAAII,EAAcE,IAClBN,EAAII,EAAcE,GAElBN,EAAI,IACJA,EAAI,GAGRjB,EAAKQ,SAAS,CACVkB,SAAUX,EACVY,QAASV,EACTW,QAASb,EAAES,EACXK,QAASZ,EAAEQ,KAjEDzB,EAsElBa,kBAAoB,SAACH,GACjB,IAAIK,EAAI,EACJE,EAAI,EAFea,EAIDpB,EAAEqB,OAAOC,wBAAvBC,EAJeH,EAIfG,KAAMC,EAJSJ,EAITI,IAQd,OAPAnB,EAAIL,EAAEyB,MAAQF,EACdhB,EAAIP,EAAE0B,MAAQF,EAMP,CAACnB,EAHRA,GAAQsB,OAAOC,YAGArB,EAFfA,GAAQoB,OAAOE,cAhFDvC,EAqFlBwC,QAAU,SAAC9B,GACPV,EAAKQ,SAAS,CAAEiC,YAAY,KAtFdzC,EAwFlB0C,SAAW,SAAChC,GACRV,EAAKQ,SAAS,CAAEiC,YAAY,KAtF5BzC,EAAKmB,MAAQ,CACTxC,MAAOqB,EAAKzB,MAAMI,MAClByC,WAAYuB,OAAO3C,EAAKzB,MAAMc,OAC9BgC,YAAasB,OAAO3C,EAAKzB,MAAMe,QAC/BgC,UAAW,IACXC,WAAY,IACZI,QAAS,EACTD,SAAU,EACVE,QAAS,EACTC,QAAS,EACTL,GAAI,EACJC,GAAI,EACJgB,YAAY,GAfFzC,wEA4FT,IAAA4C,EAaDtE,KAAK6C,MAVLxC,EAHCiE,EAGDjE,MACAyC,EAJCwB,EAIDxB,WACAC,EALCuB,EAKDvB,YACAM,EANCiB,EAMDjB,QACAD,EAPCkB,EAODlB,SACAE,EARCgB,EAQDhB,QACAC,EATCe,EASDf,QACAL,EAVCoB,EAUDpB,GACAC,EAXCmB,EAWDnB,GAIEoB,EAfDD,EAYDH,WAGuB,QAAU,OAE/BK,EAAY,CACdZ,IAAG,GAAAa,OAAKpB,EAAL,MACHM,KAAI,GAAAc,OAAKrB,EAAL,MACJsB,QAASH,GAGPI,EAAc,CAChBC,gBAAe,OAAAH,OAASpE,EAAT,KACfwE,eAAc,GAAAJ,OAAK3B,EAAaI,EAAlB,OAAAuB,OAA0B1B,EAAcI,EAAxC,MACd2B,mBAAkB,IAAAL,OAAOnB,EAAP,QAAAmB,OAAqBlB,EAArB,MAClBmB,QAASH,GAIb,OACIhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXyB,YAAanC,KAAKmC,YAClB4C,aAAc/E,KAAKkE,QACnBc,aAAchF,KAAKoE,WAGvB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWuE,MAAOT,IACjCjE,EAAAC,EAAAC,cAAA,OAAKG,IAAKP,EAAOU,MAAO+B,EAAY9B,OAAQ+B,EAAajC,IAAI,MAEjEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcuE,MAAON,YAzIlC1D,cCoDHiE,cAhDX,SAAAA,EAAYjF,GAAM,IAAAyB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA3B,KAAAkF,IACdxD,EAAAC,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAAuD,GAAAnD,KAAA/B,KAAMC,KAUV+B,mBAAqB,SAACC,GACdA,EAAUd,OAAO,GAAGd,QAAUqB,EAAKzB,MAAMkB,OAAO,GAAGd,OACnDqB,EAAKQ,SAAS,CACVf,OAAQO,EAAKzB,MAAMkB,UAdbO,EAmBlBtB,WAAa,SAACF,GAAO,IAEbiB,EACAO,EAAKmB,MADL1B,OAEJO,EAAKQ,SAAS,CACVd,MAAOlB,EACPiF,UAAWhE,EAAOjB,GAAIG,SAtB1BqB,EAAKmB,MAAQ,CACT1B,OAAQO,EAAKzB,MAAMkB,OACnBC,MAAO,EACP+D,UAAWzD,EAAKzB,MAAMkB,OAAO,GAAGd,OANtBqB,wEA8BT,IAAAkB,EAKD5C,KAAK6C,MAHL1B,EAFCyB,EAEDzB,OACAC,EAHCwB,EAGDxB,MACA+D,EAJCvC,EAIDuC,UAGJ,OACG5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAC2E,EAAD,CAAK/E,MAAO8E,EAAWpE,MAAM,MAAMC,OAAO,SAE9CT,EAAAC,EAAAC,cAAC4E,EAAD,CAAQjF,WAAYJ,KAAKI,WAAYgB,MAAOA,EAAOD,OAAQA,YA5CvDF,aCkDLqE,qBAjDb,SAAAA,EAAYrF,GAAM,IAAAyB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA3B,KAAAsF,IAChB5D,EAAAC,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAA2D,GAAAvD,KAAA/B,KAAMC,KACD4C,MAAO,CACV1B,OAAQ,CACN,CACId,MAAO,wDACPQ,MAAO,yDAEX,CACIR,MAAO,wDACPQ,MAAO,yDAEX,CACIR,MAAO,wDACPQ,MAAO,yDAEX,CACIR,MAAO,wDACPQ,MAAO,yDAEX,CACER,MAAO,wDACPQ,MAAO,yDAET,CACIR,MAAO,wDACPQ,MAAO,yDAEX,CACIR,MAAO,wDACPQ,MAAO,yDAEX,CACIR,MAAO,wDACPQ,MAAO,2DAlCCa,wEAyChB,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC8E,EAAD,CAAOpE,OAAQnB,KAAK6C,MAAM1B,iBA7ChBF,cCQEuE,QACW,cAA7BzB,OAAO0B,SAASC,UAEe,UAA7B3B,OAAO0B,SAASC,UAEhB3B,OAAO0B,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5b8b12e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Thumb extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            id,\r\n            active,\r\n            clickThumb,\r\n            image\r\n        } = this.props;\r\n        \r\n        const name = active ? 'zooga-thumb active': 'zooga-thumb';\r\n        return (\r\n           <div className={name}\r\n                onClick={() => clickThumb(id)}\r\n           > \r\n                <img src={image.thumb} alt=\"\" width=\"50\" height=\"50\"/>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Thumb;\r\n","import React, { Component } from \"react\";\r\nimport Thumb from './Thumb';\r\n\r\nclass Thumbs extends Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            images, //Toda las Imagenes\r\n            index,\r\n            clickThumb\r\n        } = this.props;\r\n\r\n        return (\r\n           <div className=\"zooga-thumbs\">\r\n           {\r\n                images.map((image, j) => {\r\n                    let active = (j === index)? true: false;\r\n                    return (\r\n                       <Thumb \r\n                            key={j}\r\n                            id={j}\r\n                            active={active}\r\n                            clickThumb={clickThumb}\r\n                            image={image}\r\n                       /> \r\n                    )\r\n                })\r\n            }\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Thumbs;","import React, { Component } from 'react';\r\nimport './Zoo.css';\r\n\r\nclass Zoo extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            image: this.props.image,\r\n            imageWidth: Number(this.props.width),\r\n            imageHeight: Number(this.props.height),\r\n            lensWidth: 260,\r\n            lensHeight: 260,\r\n            lensTop: 0,\r\n            lensLeft: 0,\r\n            resultX: 0,\r\n            resultY: 0,\r\n            cx: 520/260, // = 2\r\n            cy: 520/260,  // = 2  osea, la imagen va a ser agrandada el doble\r\n            hoverVisor: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {  \r\n        if (prevProps.image !== this.props.image) {\r\n            this.setState({\r\n                image: this.props.image\r\n            })\r\n        }\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        e.preventDefault();\r\n\r\n        let position = this.getCursorPosition(e);\r\n\r\n        this.setState({\r\n            posx: position.x,\r\n            posy: position.y\r\n        })\r\n        const {\r\n            imageWidth,\r\n            imageHeight,\r\n            lensWidth,\r\n            lensHeight,\r\n            cx,\r\n            cy\r\n        } = this.state;\r\n\r\n        let x = position.x - (lensWidth / 2);\r\n        let y = position.y - (lensHeight / 2);\r\n\r\n        if (x > imageWidth - lensWidth) {\r\n            x = imageWidth - lensWidth;\r\n        }\r\n        if (x < 0) {\r\n            x = 0;\r\n        }\r\n        if (y > imageHeight - lensHeight) {\r\n            y = imageHeight - lensHeight;\r\n        }\r\n        if (y < 0) {\r\n            y = 0;\r\n        }\r\n\r\n        this.setState({\r\n            lensLeft: x,\r\n            lensTop: y,\r\n            resultX: x*cx,\r\n            resultY: y*cy\r\n        })\r\n        \r\n    }\r\n\r\n    getCursorPosition = (e) => {\r\n        let x = 0;\r\n        let y = 0;\r\n        \r\n        const { left, top } = e.target.getBoundingClientRect()\r\n        x = e.pageX - left;\r\n        y = e.pageY - top;\r\n\r\n        /* Corrige si hay scrolling */\r\n        x = x - window.pageXOffset;\r\n        y = y - window.pageYOffset;\r\n        \r\n        return {x : x, y : y};\r\n    }\r\n\r\n    hoverOn = (e) => {\r\n        this.setState({ hoverVisor: true });\r\n    }\r\n    hoverOff = (e) => {\r\n        this.setState({ hoverVisor: false });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            image,\r\n            imageWidth,\r\n            imageHeight,\r\n            lensTop,\r\n            lensLeft,\r\n            resultX,\r\n            resultY,\r\n            cx,\r\n            cy,\r\n            hoverVisor\r\n        } = this.state;\r\n\r\n        const hover = hoverVisor ? 'block' : 'none';\r\n\r\n        const styleLens = {\r\n            top: `${lensTop}px`,\r\n            left: `${lensLeft}px`,\r\n            display: hover\r\n        }\r\n\r\n        const styleResult = {\r\n            backgroundImage: `url(${image})`,\r\n            backgroundSize: `${imageWidth * cx}px ${imageHeight * cy}px`,\r\n            backgroundPosition : `-${resultX}px -${resultY}px`,\r\n            display: hover\r\n        }\r\n\r\n        \r\n        return (\r\n            <div className=\"zoo\">\r\n                <div className=\"zoo-content\">\r\n                    <div className=\"zoo-visor\" \r\n                        onMouseMove={this.onMouseMove} \r\n                        onMouseEnter={this.hoverOn}\r\n                        onMouseLeave={this.hoverOff}\r\n                        >\r\n                    </div>\r\n                    <div className=\"zoo-lens\" style={styleLens}></div>\r\n                    <img src={image} width={imageWidth} height={imageHeight} alt=\"\" />\r\n                </div>\r\n                <div className=\"zoo-result \" style={styleResult} ></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Zoo;","import React, { Component } from \"react\";\r\nimport './Zooga.css';\r\nimport Thumbs from './Thumbs';\r\nimport Zoo from '../Zoo/Zoo'\r\n\r\nclass Zooga extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        this.state = {\r\n            images: this.props.images,\r\n            index: 0,\r\n            imageZoom: this.props.images[0].image\r\n        }\r\n    \r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (prevProps.images[0].image !== this.props.images[0].image) {\r\n            this.setState({\r\n                images: this.props.images\r\n            })\r\n        }\r\n    }\r\n\r\n    clickThumb = (id) => {\r\n        const { \r\n            images\r\n        } = this.state; \r\n        this.setState({\r\n            index: id,\r\n            imageZoom: images[id].image\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { \r\n            images,     //Imagenes que vienen del State\r\n            index,      // Indice\r\n            imageZoom   //Imagen que esta en el visor\r\n        } = this.state;\r\n        \r\n        return (\r\n           <div className=\"zooga\">\r\n                <div className=\"zooga-visor\">\r\n                    <Zoo image={imageZoom} width='500' height='500'/>\r\n                </div>\r\n                <Thumbs clickThumb={this.clickThumb} index={index} images={images}/>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Zooga;","import React, { Component } from 'react';\nimport Zooga from './Components/Zooga/Zooga';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state= {\n      images: [\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes1.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes1.jpg\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes2.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes2.jpg\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes3.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes3.jpg\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes4.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes4.jpg\"\n        },\n        {\n          image: \"https://luismachain95.github.io/Caro/image/shoes1.jpg\",\n          thumb: \"https://luismachain95.github.io/Caro/image/shoes1.jpg\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes2.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes2.jpg\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes3.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes3.jpg\"\n        },\n        {\n            image: \"https://luismachain95.github.io/Caro/image/shoes4.jpg\",\n            thumb: \"https://luismachain95.github.io/Caro/image/shoes4.jpg\"\n        }\n    ],\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"content\"> \n        <Zooga images={this.state.images}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}